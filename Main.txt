-- Carregar a UI Library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/youngstar"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Vari√°veis
local systemActive = false
local viewIndex = 1
local viewingPlayer = nil
local followConnection = nil
local playerList = {}

-- Criar janela principal
local Window = library:CreateWindow("Gui de visualizar")

-- Ativar/Desativar sistema
Window:Toggle("Ativar Visualiza√ß√£o", function(state)
    systemActive = state
    if state then
        playerList = {}
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= LocalPlayer and p.Character then
                table.insert(playerList, p)
            end
        end
        if #playerList > 0 then
            viewIndex = 1
            viewingPlayer = playerList[viewIndex]
            Camera.CameraSubject = viewingPlayer.Character:FindFirstChild("Humanoid")
        end
    else
        Camera.CameraSubject = LocalPlayer.Character:FindFirstChild("Humanoid")
        viewingPlayer = nil
        if followConnection then followConnection:Disconnect() end
    end
end)

-- Setas de troca de vis√£o
Window:Button("‚¨ÖÔ∏è Ver Anterior", function()
    if not systemActive or #playerList == 0 then return end
    viewIndex = (viewIndex - 2) % #playerList + 1
    viewingPlayer = playerList[viewIndex]
    Camera.CameraSubject = viewingPlayer.Character:FindFirstChild("Humanoid")
end)

Window:Button("‚û°Ô∏è Ver Pr√≥ximo", function()
    if not systemActive or #playerList == 0 then return end
    viewIndex = viewIndex % #playerList + 1
    viewingPlayer = playerList[viewIndex]
    Camera.CameraSubject = viewingPlayer.Character:FindFirstChild("Humanoid")
end)

-- TextBox para nome do jogador
local selectedName = ""
Window:Box("Nome do Jogador", function(text)
    selectedName = text
end)

-- Teleportar para player
Window:Button("üöÄ Teleportar", function()
    local target = Players:FindFirstChild(selectedName) or viewingPlayer
    if target and target.Character and LocalPlayer.Character then
        LocalPlayer.Character:PivotTo(target.Character:GetPivot())
    end
end)

-- Grudar no player (seguir posi√ß√£o)
Window:Button("üß≤ Grudar", function()
    if followConnection then followConnection:Disconnect() end
    local target = Players:FindFirstChild(selectedName) or viewingPlayer
    if target and target.Character then
        followConnection = game:GetService("RunService").RenderStepped:Connect(function()
            if LocalPlayer.Character and target.Character then
                LocalPlayer.Character:PivotTo(target.Character:GetPivot() * CFrame.new(2, 0, 2))
            end
        end)
    end
end)

-- Desgrudar
Window:Button("‚ùå Desgrudar", function()
    if followConnection then
        followConnection:Disconnect()
        followConnection = nil
    end
end)
